XOR[x_,y_]:=x+y;
MUX[z_, x_, y_] := z*x + (z + 1)*y;
OR[x_, y_] := x*y + x + y;
AND[x_, y_] := x*y;
NAND[x_, y_] := x*y + 1;
NOR[x_, y_] := x*y + x + y + 1;
XNOR[x_, y_] := x + y + 1;
NMUX[z_, x_, y_] := z*x + (z + 1)*y + 1;
NOT[x_]:=x+1;
 
control bit: z ;###z=1/0:ENC/DEC
input:T0,T1,...,T7;
output:Y0,Y1,...Y7;
higher-order bit on the right using little endian

T8 = XOR[T0, T2];
T9 = XOR[T3, T4];
T10 = XNOR[T1, T3];
T11 = XOR[T7, T9];
T12 = XNOR[T0, T5];
T13 = XNOR[T4, T12];
T14 = XOR[T0, T2];
T15 = XOR[T3, T4];
T16 = XOR[T2, T3];
T17 = XOR[T6, T7];
T18 = XOR[T9, T17];
T19 = XOR[T0, T17];
T20 = XOR[T1, T5];
T21 = XOR[T2, T20];
T22 = XOR[T7, T20];
T23 = XOR[T4, T6];
T24 = XOR[T5, T23];
T25 = XOR[T1, T2];
T26 = XOR[T17, T25];
T27 = NOT[T5];
K0 = MUX[z, T8, T3];
H1 = T24 + K0;
H2 = MUX[z, T21, T26];
H3 = MUX[z, T18, T13];
K1 = MUX[z, T7, T27];
H4 = K1 + T9;
K2 = MUX[z, T7, T10];
L1 = K2 + T19;
K3 = MUX[z, T12, T8];
L2 = K3 + T11 + 1;
L3 = MUX[z, T9, T16];
L4 = MUX[z, T2, T22];
H12 = XOR[H1, H2]; 
H13 = XOR[H1, H3]; 
H14 = XOR[H1, H4]; 
H24 = XOR[H2, H4]; 
H34 = XOR[H3, H4]; 
H23 = XOR[H2, H3];
L12 = XOR[L1, L2]; 
L13 = XOR[L1, L3]; 
L14 = XOR[L1, L4]; 
L24 = XOR[L2, L4]; 
L34 = XOR[L3, L4]; 
L23 = XOR[L2, L3];
G0 = NOR[H12, L12];
G1 = NOR[H34, L34];
G2 = NOR[H2, L2];
G3 = NAND[H3,L3];
G4 = NAND[H13,L13];
G5 = NOR[H3, L3];
G6 = NOR[H4, L4];
G7 = NOR[H13, L13];
G8 = NAND[H14,L14];
G9 = NOR[H23, L23];
G10 = NOR[H14, L14];
G11 = NAND[H24,L24];
G12 = NOR[H1, L1];
G13 = NOR[H24, L24];
G14 = NAND[H2,L2];
M0 = XNOR[G0,G1];
M1 = XNOR[G2,G3];
M2 = XNOR[G0,G4];
M3 = XNOR[G5,G6];
M4 = XNOR[G7,G8];
M5 = XNOR[G9,G6];
M6 = XNOR[G10,G9];
M7 = XNOR[G11,G12];
M8 = XNOR[G13,G1];
M9 = XNOR[G12,G14];
D0 = XNOR[M0,M1];
D1 = XNOR[M2,M3];
D2 = XNOR[M4,M5];
D3 = XNOR[M6,M7];
D4 = XNOR[M8,M9];
N1 = NMUX[D0, D2, D3];
N2 = XNOR[D0, D1];
N3 = NAND[D0, D3];
N4 = XNOR[D0, D4];
N5 = MUX[D2, D3, D4];
N6 = MUX[D4, D3, D1];
N7 = NMUX[D1, D2, D0];
N8 = MUX[D4, D2, D3];
N9 = XOR[D1, D3];
N10 = NMUX[D4, D0, D1];
N11 = NMUX[D0, D4, D2];
N12 = XOR[D0. D3];
N13 = MUX[D1, D4, D0];
N14 = NMUX[D1, D2, D3];
N15 = MUX[D2, D4, D3];
F0 = NMUX[N9, N13, N4];
F1 = MUX[N13, N3, N15];
F2 = MUX[N9, N1, N15];
F3 = NMUX[N10, N14, N2];
F4 = NMUX[N5, N15, N10];
F5 = MUX[N2, N5, N11];
F6 = MUX[N12, N14, N8];
F7 = NMUX[N6, N8, N7];
F8 = NMUX[N4, N14, N6];
F9 = MUX[N4, N5, N7];
Q0 = NAND[L14,F6];
Q1 = NAND[L23,F7];
Q2 = NAND[L1,F0];
Q3 = NAND[L24,F8];
Q4 = NAND[L2,F1];
Q5 = NAND[L34,F9];
Q6 = NAND[L3,F2];
Q7 = NAND[L12,F4];
Q8 = NAND[L4,F3];
Q9 = NAND[L13,F5];
Q10 = NAND[H14,F6];
Q11 = NAND[H23,F7];
Q12 = NAND[H1,F0];
Q13 = NAND[H24,F8];
Q14 = NAND[H2,F1];
Q15 = NAND[H34,F9];
Q16 = NAND[H3,F2];
Q17 = NAND[H12,F4];
Q18 = NAND[H4,F3];
Q19 = NAND[H13,F5];
P0=XOR[Q0,Q1];
P1=XOR[Q2,Q3];
P2=XOR[Q4,Q5];
P3=XOR[Q6,Q7];
P4=XOR[Q8,Q9];
P5=XOR[Q10,Q11];
P6=XOR[Q12,Q13];
P7=XOR[Q14,Q15];
P8=XOR[Q16,Q17];
P9=XOR[Q18,Q19];
P10 = XNOR[P2, P3];
P11 = XOR[P5, P6];
P12 = XNOR[P1, P2];
P13 = XOR[P6, P7];
P14 = XOR[P5, P8];
P15 = XOR[P0, P4];
P16 = XNOR[P6, P8];
P17 = XOR[P12, P16];
P18 = XOR[P3, P4];
P19 = XOR[P11, P18];
P20 = XNOR[P10, P11];
P21 = XOR[P5, P8];
P22 = XNOR[P0, P1];
P23 = XOR[P7, P8];
P24 = XOR[P3, P4];
P25 = XOR[P5, P9];
P26 = XNOR[P22, P25];
P27 = XNOR[P16, P25];
P28 = XOR[P5, P7];
P29 = XOR[P18, P28];
P30 = XOR[P15, P28];
P31 = XOR[P7, P9];
P32 = XNOR[P12, P31];
P33 = XOR[P1, P3];
P34 = XOR[P23, P33];
E0 = MUX[z, P10, P11];
Y0 = XOR[E0, P26];
E1 = MUX[z, P12, P13];
Y1 = XOR[P27, E1];
Y2 = MUX[z, P34, P19];
Y3 = MUX[z, P14, P29];
Y4 = MUX[z, P30, P15];
E2 = MUX[z, P16, P18];
Y5 = XOR[P17, E2];
E3 = MUX[z, P14, P22];
Y6 = XNOR[P20, E3];
E4 = MUX[z, P23, P18];
Y7 = XOR[P32, E4];


